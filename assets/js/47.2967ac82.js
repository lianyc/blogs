(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{461:function(_,v,l){"use strict";l.r(v);var t=l(2),n=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-复杂度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-复杂度"}},[_._v("#")]),_._v(" 1.复杂度：")]),_._v(" "),v("ul",[v("li",[_._v("程序执行时需要的计算量和内存空间")]),_._v(" "),v("li",[_._v("复杂度是数量级")]),_._v(" "),v("li",[_._v("一般针对具体的算法，而非一个完整的系统")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/blogs/fuzadu.png",alt:"fuzadu.png"}})]),_._v(" "),v("ul",[v("li",[_._v("O(1)：可数的")]),_._v(" "),v("li",[_._v("O(logn): 随着数据量变大，复杂度趋于平缓")]),_._v(" "),v("li",[_._v("O(n): 复杂度和数据量成正比")]),_._v(" "),v("li",[_._v("O(nlogn): 计算量变大，复杂度上升明显")]),_._v(" "),v("li",[_._v("O(n²)：计算量变大，复杂度指数上升")])]),_._v(" "),v("h2",{attrs:{id:"_2-时间复杂度-程序执行时需要的计算量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-时间复杂度-程序执行时需要的计算量"}},[_._v("#")]),_._v(" 2.时间复杂度：程序执行时需要的计算量")]),_._v(" "),v("ul",[v("li",[_._v("O(1)：一次就够")]),_._v(" "),v("li",[_._v("O(logn): 数据量的对数 （例：二分法）")]),_._v(" "),v("li",[_._v("O(n): 和传输的数据量一样 （例：循环）")]),_._v(" "),v("li",[_._v("O(nlogn): 数据量 * 数据量的对数 （例：循环中二分法）")]),_._v(" "),v("li",[_._v("O(n²)：数据量的平方（例：两个循环嵌套）")])]),_._v(" "),v("h2",{attrs:{id:"_3-空间复杂度-程序执行时需要的内存空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-空间复杂度-程序执行时需要的内存空间"}},[_._v("#")]),_._v(" 3.空间复杂度：程序执行时需要的内存空间")]),_._v(" "),v("ul",[v("li",[_._v("O(1)：有限的、可数的空间")]),_._v(" "),v("li",[_._v("O(logn):")]),_._v(" "),v("li",[_._v("O(n): 和输入的数量级相同的空间")]),_._v(" "),v("li",[_._v("O(nlogn):")]),_._v(" "),v("li",[_._v("O(n²)：")])])])}),[],!1,null,null,null);v.default=n.exports}}]);